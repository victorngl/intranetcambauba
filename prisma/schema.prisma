// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema


generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id          Int     @id @default(autoincrement())
  email       String  
  password    String
  image       String?
  name        String?
  phone       String?
  cpf         String  @unique
  role        Role    @relation(fields: [roleId], references: [id])
  roleId      Int 
  comunicados Comunicado[]
  alunos      Alunos_Responsaveis[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
}

model Aluno {
  id              Int     @id @default(autoincrement())
  naluno          Int     @unique
  name            String
  cpf             String?
  turma           Turma @relation(fields: [turmaId], references: [id])
  turmaId         Int
  responsaveis    Alunos_Responsaveis[]
  rupd            Rupd[] 
}

model Alunos_Responsaveis {
  usuarios            User     @relation(fields: [cpf], references: [cpf])
  cpf                 String // relation scalar field (used in the `@relation` attribute above)
  alunos              Aluno @relation(fields: [naluno], references: [naluno])
  naluno              Int // relation scalar field (used in the `@relation` attribute above)
  assignedAt          DateTime @default(now())
  assignedBy          String? 
  @@id([cpf, naluno])
}

model Role {
  id        Int     @id @default(autoincrement())
  name      String
  users     User[]
}

model Comunicado {
  id          Int     @id @default(autoincrement())
  title       String  
  summary     String?
  description String?
  file        String
  coverPhoto  String?
  classes     Json
  author      User @relation(fields: [authorId], references: [id])
  authorId    Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
}

model Turma {
  id          Int     @id @default(autoincrement())
  name        String  
  year        Int
  alunos      Aluno[]
  disciplinas Turmas_Disciplinas[]
}

model Disciplina {
  id          Int     @id @default(autoincrement())
  name        String
  turmas      Turmas_Disciplinas[]
}

model Turmas_Disciplinas {
  id                  Int   @id @default(autoincrement())
  turma               Turma     @relation(fields: [turmaId], references: [id])
  turmaId             Int // relation scalar field (used in the `@relation` attribute above)
  disciplina          Disciplina @relation(fields: [disciplinaId], references: [id])
  disciplinaId        Int // relation scalar field (used in the `@relation` attribute above)
  profId              Int?
  rupd                Rupd[]
  assignedAt          DateTime @default(now())
  assignedBy          String? 
}

model Rupd {
  id            Int     @id @default(autoincrement())
  firstNote     Float?  
  secondNote    Float?
  thirdNote     Float?
  fourthNote    Float?
  disciplina    Turmas_Disciplinas @relation(fields: [disciplinaId], references: [id])
  disciplinaId  Int  // relation scalar field (used in the `@relation` attribute above)
  aluno         Aluno @relation(fields: [alunoId], references: [naluno])
  alunoId       Int @unique // relation scalar field (used in the `@relation` attribute above)
}

